# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  repositories:
    - repository: synthea
      type: github
      endpoint: science-automation
      name: synthetichealth/synthea
    - repository: synthea-international
      type: github
      endpoint: science-automation
      name: synthetichealth/synthea-international

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
- checkout: synthea
- checkout: synthea-international
- script: |
    find /usr -name "javac" -print
    echo $LANG
    #export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
    #/usr/lib/jvm/zulu-11-azure-amd64/bin
    #PATH=/usr/lib/jvm/java-11-openjdk-amd64/bin:$PATH
    cd /home/vsts/work/1/s/synthea
    echo "exporter.encoding = UTF-8" >> ../synthea-international/fi/src/main/resources/synthea.properties
    cp -R ../synthea-international/fi/* .
    #export GRADLE_OPTS="-Dfile.encoding=UTF-8"
    ./gradlew build -x test
    javac -version
    java -version
    which java
  displayName: 'Build Synthea for country'
- script: |
    #export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
    #PATH=/usr/lib/jvm/java-11-openjdk-amd64/bin:$PATH
    cd /home/vsts/work/1/s/synthea
    #export GRADLE_OPTS="-Dfile.encoding=UTF-8"
    ./run_synthea -p 5 "Uusimaa"
  displayName: 'Run synthea for country'
